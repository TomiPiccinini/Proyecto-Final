openapi: 3.0.0
info:
  title: API Business Layer
  version: "0.1"
paths:

  /match/consult:

    post:
      summary: Post to get all matchs

      tags:
        - match

      operationId: getMatchs

      requestBody:
        description: Save likes request
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Get Match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchGetResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'

  /match/close:

    post:
      summary: Post to end a match

      tags:
        - match

      operationId: closeMatch

      requestBody:
        description: Save likes request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchRequest'
      responses:
        '200':
          description: Get Match
          content:
            application/json:
              schema:
                $ref: 'api-user.yml#/components/schemas/GeneralBusinessResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'


  /match/message:

    post:
      summary: Post to add a message to match

      tags:
        - chat

      operationId: addMessage

      requestBody:
        description: Save message to match's chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        '200':
          description: Add message
          content:
            application/json:
              schema:
                $ref: 'api-user.yml#/components/schemas/GeneralBusinessResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralBusinessError'



components:
  schemas:

    MatchRequest:
      description: ''
      type: object
      properties:
        matchId:
          type: integer
        reason:
          type: string
          enum:
            - Confirmado
            - Cancelado

    MatchGetResponse:
      description: ''
      type: object
      properties:
        matchs:
          $ref: '#/components/schemas/Match_list'

    Match_list:
      type: array
      items:
        $ref: '#/components/schemas/MsgMatch'


    MsgMatch:
      type: object
      description: ''
      required:
        - foto
        - dateTimeMatch
        - nameOtherUser
        - idOtherUser
      properties:
        yourMedia:
          $ref: '#/components/schemas/MediaMatch'
        otherMedia:
          $ref: '#/components/schemas/MediaMatch'
        dateTimeMatch:
          type: string
        emailOtherUser:
          type: string
        mensajes:
          type: array
          items:
            $ref: '#/components/schemas/MessageRequest'

    Message:
      type: object
      description: ''
      required:
        - userIssuing
        - userReceiver
        - dateTime
        - text
      properties:
        matchId:
          type: integer
        userIssuing:
          type: integer
        userReceiver:
          type: integer
        dateTime:
          type: string
        text:
          type: string

    MediaMatch:
      type: object
      description: ''
      required:
        - photoList
        - state
        - description
        - measures
        - title
        - color
        - brand
        - tag
      properties:
        mediaId:
          type: integer
        userEmail:
          type: string
        title:
          type: string
        color:
          type: string
        brand:
          type: string
        photoList:
          type: array
          items:
            $ref: '#/components/schemas/PhotoMatch'
        state:
          type: string
        description:
          type: string
        measure:
          type: string
        tag:
          type: string
        updateDate:
          type: string
        dischargeDate:
          type: string

    PhotoMatch:
      type: object
      description: ''
      properties:
        photoId:
          type: integer
        mediaId:
          type: integer
        url:
          type: string
          format: base64

    MessageRequest:
      type: object
      description: ''
      required:
        - emailIssuing
        - emailReceiver
        - dateTime
        - text
      properties:
        matchId:
          type: integer
        emailIssuing:
          type: string
        emailReceiver:
          type: string
        dateTime:
          type: string
        text:
          type: string


    Match:
      type: object
      description: ''
      required:
        - dateTimeMatch
        - userId1
        - userId2
        - state
      properties:
        matchId:
          type: integer
        dateTimeMatch:
          type: string
        mediaId1:
          type: integer
        mediaId2:
          type: integer
        state:
          type: string

    GeneralBusinessError:
      type: object
      description: 'Code that represents the error that took place'
      properties:
        code:
          type: string
        message:
          type: string
          description: Human readable description of the error

